¿Hola, cómo están? Bueno, hoy va el anteúltimo ejercicio, ya la semana que viene vamos a estar con manejo de sesión, así que hoy es el CRUD, hoy es ABM, así que vamos a tomar como base el mismo ejercicio que hicimos la semana anterior, que tenía filtros, que tenía ordenamiento, que tenía listado, creación dinámica de tabla, ordenamiento obviamente y vamos a agregar lo necesario para poder almacenar o modificar o borrar datos de la base. Siempre siguiendo el mismo patrón de diseño, siempre siguiendo el mismo patrón de arquitectura que habíamos dicho que era modelo vista, plantilla, modelo del acceso a la base de datos a través de PDO como lo vimos la semana pasada y la plantilla que JavaScript, CSS y HTML para poder modelar la presentación, la presentación y los botones de control de nuestro tablero. Así que muchas palabras, lo mejor va a ser mostrarles cómo quiero que quede. Así que vamos a la presentación. Bueno, estamos en el sistema de archivos siempre Prof PHP. El ejercicio de esta semana, este ABM, la semana pasada fue lista ordena filtros, esta semana es ABM entro y vamos a ver qué scripts tenemos ahí en esa carpeta. Ahora se va complicando, cada vez va a haber más scripts, cada script va a ser una parte de la funcionalidad de mi aplicación, esta aplicación de sólo una página de página única, así que la parte vista de la arquitectura va a estar siendo programada en los diferentes scripts PHP que corresponde a la alta, alta PHP en la parte de la vista que permite acceder para dar de alta un nuevo registro, siempre hablando de la tabla que cada uno de ustedes les corresponde. Baja será obviamente para es un script que realiza las bajas datos de conexión a la base, es un IN, es un PHP que solamente tiene las variables de conexión al motor de base de datos, eso lo separé simplemente para que uno vaya rápidamente cuando tiene que reconfigurar la conexión, cuando tiene alguna base de datos en otro lado, eso puede ocurrir. Por lo general la base de datos siempre está en el localhost, porque cuando ustedes están hosteando en Hostinger o en cualquier otra plataforma, ellos mismos les ofrece el motor de base de datos, así que estarían apuntando al localhost, pero ustedes también podrían trabajar locales con el XAMPP y estar accediendo a un motor de base de datos en la nube, ¿Me entienden? Pueden ser distintas posibilidades. Datos de conexión a la base sería otro el index HTML justamente quiero que lo hagan HTML para que vean, puede ser PHP, tranquilamente podría ser PHP y tener HTML, pero quiero que diga HTML, que sea un HTML para que ustedes tomen conciencia de que acá no es no es necesaria la programación del lado del servidor. Estamos trabajando sobre la plantilla, estamos trabajando sobre la presentación totalmente del lado del cliente. Ojo, esto no es porque siempre tenga que ser así, es porque en la materia mía yo lo organizo de esta manera y lo quiero siguiendo este modelo, pero ya les digo, ahí va a estar la plantilla, CSS, JavaScript y HTML, todolindex, HTML, esto no va a ir, son extras que a veces les doy, pero prefiero que aprendan bien lo básico y no ir por cosas más complejas que los pueda confundir. Bueno, obviamente jQuery, porque ya están acostumbrados a usar algunas cositas jQuery o ojo, nuevamente les digo, no quiero disparar el Ajax con jQuery, quiero que Ajax lo disparen con el API Fetch, eso ya creo que les quedó claro. Modi, un script que permite la funcionalidad de modificación sobre la base precio, tampoco lo vamos a hacer esto, así que olvídense. Y después los PHP que tienen que ver con la salida del de la tabla principal, que es la tabla de artículos. En mi caso esto lo usé como un auxiliar, artículo 3, así que lo mando a la carpeta viejo, como que ya no lo uso más. Y después salida JSON familia, que es lo mismo que artículos, pero va a traer la tabla auxiliar que yo la voy a estar utilizando para poder hacer el desplegable, como ya lo hicieron obviamente la semana pasada. Y el último trydoc, que sería un script que permite ir a buscar, ir a buscar al servidor el archivo binario que está almacenado en la tabla principal. Acuérdense que uno de los campos que hasta ahora no vimos, porque obviamente no teníamos todavía manejo de la programación del lado del servidor, es la funcionalidad de traer un archivo PDF o una imagen, en este caso un PDF, para ser mostrado en el navegador. Ese es el script que permite acceder a ese PDF. Bueno, ¿Cómo se tiene que ver esto en el navegador? Bueno, acá vemos el tablero, casi como estaba en el ejercicio de la semana pasada, casi como ustedes lo lograron a nivel estilo, a nivel presentación, a nivel funcionalidad en JavaScript, es exactamente esto. Vamos a recargar la página. Al recargar la página viene la página principal, documento principal viene del servidor Y acuérdense que todas estas alertas que yo les pongo acá quiero que estén justamente para detectar los momentos cargué la página. Lo primero que viene obviamente es el HTML básico, que es todo el tablero, y viene un JSON que contiene las familias que van a corresponder a este desplegable de familia. En caso de ustedes, cada uno tendrá su campo que sea desplegable, como ya vimos en los ejercicios especiales. Bien, entonces ya vemos que lo que muestra el alert es el JSON de familias. Acepto, ya familias lo tengo en la memoria del navegador y por lo tanto ya lo podría desplegar acá. Efectivamente, acá está el desplegable. Bueno, cuando pulso cargar datos, como vimos igual que la semana pasada, es el mismo ejercicio. Cargo los datos. Antes de cargarlos les pido que en una alerta me muestren cuáles son las variables que van a pasar al servidor en el requerimiento HTTP. Allá al servidor van a ir a buscar datos con unas determinadas variables que corresponden al campo ordenamiento. Con lo cual yo quiero ordenada la tabla y los campos de filtro, si yo quisiera filtrar por alguno de los campos. Bien, entonces todavía no se disparó. Recién cuando acepte este alert se va a disparar el AJAX. Cuando se dispare el AJAX va a estar un tiempo en el servidor, que lo hago dormir a propósito, como hicimos antes, y van a venir los datos. Esto mismo es lo que respuesta esperando respuesta. Es lo mismo que vimos ahí. Llegó los datos y fíjense que cuando acepte va a dinámicamente crearme la tabla con todas las filas, los rows, y ahí tengo el nuevo tablero. Fíjense en la misma función de crear tabla, donde habían llegado nada más que hasta esta columna de saldo stock. Tienen que ampliar un poquito el código de ese cargar tabla, porque en cada ciclo del barrido del JSON de los artículos, en este caso, voy a tener que crear estos tres botones dinámicamente. Estos tres botones no existen originalmente la tabla está vacía, no existen los tres botones y ya lo crean. Un botón primero va a ser para mostrar el PDF, o sea, mostrar el binario almacenado en la tabla esta de la base de datos, en este caso las almendras. Fíjense, si pulso PDF, fíjense el momento en que llega la respuesta HTTP y se cumple la promesa, la cadena de promesas en ese momento sobre la última promesa se despliega el binario que estoy recibiendo, es un binario, es el binario, es el PDF que estaba almacenado en el campo de la base de datos. Si acepto se me abre una ventana, se me abre una ventana que es donde voy a poner la respuesta del servidor, o sea, esta es una ventana extra modal que tienen que crear, una ventana extra modal que la tienen que crear para que todo lo que venga del servidor y yo quiero que muestren lo guarde como innerHTML adentro de esta ventana modal, en este caso estoy mirando un PDF que habla sobre las características de un artículo, cada uno de ustedes tiene su propia consigna. Si cierro esta ventana modal, fíjense que como siempre todo está desactivado en la ventana principal como debe ser, igual que lo hicimos en especiales y cuando cierro la ventana modal me vuelve a activar todo en el tablero principal, todo eso para ver el PDF justamente en los apuntes esta semana les explico en un archivo aparte, en un PDF aparte les estoy explicando cómo hacer para acceder en el servidor a los datos binarios y cómo enviarlos por JSON al navegador remoto y también cómo programamos el navegador remoto en la presentación, o sea en la plantilla para poder visualizar dentro de un iframe el PDF. Todo eso está en un archivo aparte. Bien, únicamente fíjense que también se producen botones de modificación y botones de borrado para cada registro, cada registro lo puedo modificar o lo puedo borrar a partir del clic en estos botones, lo mismo que va a haber un botón arriba nuevo que es el alta de un registro, cuando yo quiero crear un nuevo registro le pongo acá en alta, esto ya existía la semana pasada, limpiar los filtros, vaciar los datos y cargar los datos y el orden con el código de orden que iba a cambiar si yo cliqueaba arriba en cada columna de acuerdo al orden que pretendía recibir. Volvemos a esta semana, esta semana programar el código necesario para traer el PDF, programar el código necesario para la modificación y programar el código necesario para borrar cada registro. ¿Qué va a pasar cuando yo pulse en modi? Cuando pulse en modi, así como en PDF se abría una ventana para recibir respuesta del servidor, acá se va abrir una ventana nueva que me va a presentar el formulario de modificaciones, o sea, va a haber un formulario de modificaciones y va a haber un formulario de altas, pero ahora están ocultos, ahora no se ven, están invisibilizados por CSS. Cuando pongo modi me va a aparecer el formulario de modi. Fíjense, en una ventana modal está el formulario de modificación. Atenti que cuando viene el formulario tiene que haber una función también iniciada por ustedes, que me llene los datos de acuerdo al registro que yo haya clickeado para modificar. Acá yo clique en almendra y recibo todos los datos de almendras. Ya ven que el botón de enviar modi está pagado únicamente si cambio algún dato, por ejemplo, si en vez de tener un saldo stock de 20.011 tengo un saldo stock de 20.012, cuando pulse ahí ya borré un dígito, ya se me habilitó el botón de enviar modificación porque ya mi aplicación detectó de que hay una modificación. Si yo quisiera podría seleccionar un nuevo archivo para poder enviar un nuevo archivo como archivo binario para ser guardado en el campo correspondiente de la base de datos. También si no lo pulso, la modificación se va a realizar de manera simple, sin ningún binario nuevo que vaya a reemplazar al que había al enviar la modificación. Yo quiero que la respuesta que venga del servidor sea una respuesta que contenga varias líneas de información acerca de cómo fue el proceso realizado en el servidor para lograr esta alta y textos que me digan si el alta ha sido realmente satisfactoria o no, si fue o no Sagexful. Bien, entonces enviar la modificación. En ese momento que presiono enviar, de la misma manera que clases anteriores hacíamos, por ejemplo Form to JSON, se dispara un AJAX mandando un formulario completo, acuérdense que usábamos una forma para mandar inputs independientes y usábamos otra forma para enviar un formulario todo completo. Entonces enviamos el modi, todavía no se disparó el AJAX, me aparece una ventanita que me ¿Está seguro que desea modificar el registro ALM? Si, acepto y después de un tiempo ya me viene la respuesta. Esta respuesta obviamente en la aplicación que ustedes hagan verdadera no va a estar, pero en la que yo les exijo sí, captura el momento en que se cumple las promesas, la cadena de promesas, captura lo que regresó en la respuesta HTTP y lo despliega en el alert. Fíjense que aparecen los VR, ¿Por qué? Porque yo esta misma información la quiero en una ventana nueva de la aplicación, no en un alert, la quiero en una ventana, así que fíjense que cuando aparezca una nueva, cuando se abra una nueva ventana para mostrar los resultados, ya el VR no se va a ver porque un alert no es capaz de poder interpretar etiquetas HTML, por eso es que aparecen acepto y fíjense, se abre una nueva ventana modal que es respuesta del servidor, donde me parte de la modificación simple de datos, conexión exitosa, o sea que la modificación simple llamo modificación simple de datos cuando se está modificando datos y no el binario y cuando le pongo ahí algo que tenga que ver con el registro del PDF binario, en ese caso aparece algo así como lo que está acá Parte parte registra documento PDF La primera parte corresponde a los resultados de la modificación simple y la segunda la modificación del binario. Bueno, vamos a leer cada uno de ellos. Parte de modificación simple datos La conexión fue exitosa en el try catch, donde estoy llamando a la función de PDO de preparación, resulta que sale sin error, por lo tanto me pone preparación exitosa, Bind exitoso o vinculación el bind es la vinculación, la segunda parte del proceso PDO y la tercera parte es la ejecución, ejecución exitosa. Si yo tengo el cuidado de que en el servidor estoy llamando a las tres funciones y encerrándolas en un try catch, podría llegar a recuperar perfectamente un texto de error, inclusive un código de error, si es que no logra algunas de estas, si no logra ejecutar con éxito algunos estos procesos. Entonces con respecto a la parte binaria, yo no mandé ningún archivo, yo no subí ningún archivo nuevo para reemplazar el binario existente, por lo tanto me dice name vacío, type tipo archivo vacío, size 0, nombre temporario, nada. Bueno, cuando cierre la ventana se van a cerrar todas las ventanas modales, fíjense que la aplicación tiene dos ventanas modales, una para meter adentro los formularios de alta y modificaciones y otra ventana que es la respuesta del servidor para justamente concatenar datos que vengan de los procesos que se están ejecutando del lado del servidor. Bien, cierro las ventanas y si me fijo los datos no automaticé la carga de la tabla, podrían ustedes en la aplicación después verdadera, una vez que se realizó la modificación y terminó automáticamente, disparar la función de carga tabla y cargar la nueva tabla, por eso que no tiene la modificación acá. Fíjense que la almendra sigue en 20011, lo había puesto en 20012. Vamos a cargar nuevamente los datos sin filtros. Cuando vuelva tendría que decir 20012. Ya al volver estoy capturando la alerta con el JSON y ahí está, 20.012. Bien, entonces ya tenemos MODI, vamos a la baja, el botón borrar por ejemplo, vamos a borrar la almendra. La almendra borrar está seguro, eso tiene que tener ese confirm. La aplicación está seguro que desea borrar, eliminar el almuerzo. Y ahí me está volviendo la respuesta que me manda baja PHP que dice que el código artículo recibido para borrar es ALM, que la conexión con el motor de base de datos fue exitosa, trae catch en la conexión. El prepare también devuelve una preparación exitosa y el execute también devuelve una ejecución exitosa. Tanto la preparación como la ejecución están encerradas en un try catch para poder detectar excepciones. Aceptar. Esa misma información que estaba en el alert me aparece en la ventana modal de respuesta del servidor. Conexión exitosa, preparación exitosa, ejecución exitosa. Lo único que ahora está renderizada perfecto, porque está dentro de la capacidad del navegador de entender HTML, cosa que en alert no. Entonces cierro acá y bueno, y si cargo nuevamente los datos, el botón carga datos, ya el AL deber no existir. Perdón, me equivoqué. Vaciar datos, cargar datos. Ahora no debería existir más el ALM, Ya vemos acá en el JSON que no está, fue dado de baja. Bueno, ya está entonces la PDF, ya está el mod y ya está el botón de borrar. ¿Y qué falta? El alta. El alta va a abrir la misma ventana modal que se usó para el formulario de Modi y me va a traer el formulario de alta. Obviamente que el formulario de alta, a diferencia del formulario de Modi, está sin datos. Vamos a cargar de nuevo la ENZ que habíamos borrado al ALM sería el código, Esto sería una fruta seca. La fecha de alta, vamos a poner la de hoy. Descripción almendras nonpareil 3 para que veamos que corresponde con el código. Unidad de medida en kilogramos, no kilogramos a granel Bolsa de almendras a granel Saldo de stock. Esto en este momento el saldo podría ser de 30.000 tengo un archivo de estas almendras que me llegaron nonparel 3, busco, selecciono el archivo, acuérdense que este tiene que ser un formulario que permita subir archivos al servidor de acuerdo a cómo está explicado en PDF. Acá me va a pedir que seleccione el archivo dentro de mi sistema de archivos, me fijo a ver si tengo algo que se parezca a almendras. Acá tengo un archivo almendras PDF, lo selecciono, fíjense que acá está el nombre archivo PDF tal cual va a llegar al servidor y así ya le puedo dar. Se habilitó el botón de alta y puedo dar de alta. Y ahora me va a venir toda la respuesta de cómo fue el alta. Enviar el alta, está seguro de insertar el registro ALM, acepto y ahí me volvió la respuesta del servidor luego de un tiempo donde me dice que el código artículo ALM que es familia frutas secas, nonpareil 3, unidad de medida kilogramos, fecha de alta, saldo stock 30.000, conexión exitosa, preparación exitosa, vinculación exitosa, ejecución exitosa, contenido al PDF asociado ha sido registrado, preparación, Esta preparación y esta ejecución. La segunda corresponde el almacenamiento del binario. Acuérdense que con lo que les decía en el PDF a mí me gusta más dar un alta simple sin ningún binario, después irme al último registro dado de alta y modificarlo y agregarle al binario. Envío todo, envío los datos nuevos del nuevo registro con el binario o con los binarios que necesite y la información llega toda al servidor. Pero el servidor primero da un alta simple sin los binarios y después en una segunda etapa del proceso modifica el último registro insertado con los binarios nuevos. Esto es la respuesta que recibí, esta alerta, que ahora me van a aparecer una ventana modal, una ventana modal de respuestas, a ver si es cierto, acepto y ahí está la ventana modal. Respuesta del servidor al alta, entradas recibidas, todo lo mismo que decía el alert, está escrito acá. La primera etapa el alta simple y la segunda el alta del documento binario PDF. Cierro las ventanas, Almendra no existe, pero si yo recargo los datos ya me tendría que venir. Envío el disparo de recarga, esperando respuesta. Ahí llegaron los datos de la nueva. El JSON del nuevo requerimiento almendras, ya lo vemos que está acá, Almendras acepto, arma dinámicamente la tabla y ya aparece almendra. Si está todo bien, ya tiene que estar cargado la imagen de la almendra, me fijo en el PDF para visualizarlo de almendra, ahí me acaba de llegar el binario, acepto y ahí me lo muestra, obviamente que es el mismo ejercicio que la semana pasada, así que esto con respecto a la responsividad sigue teniendo las mismas características. Bueno, listo, a trabajar ahora, les mando un abrazo y que tengan buena semana.
